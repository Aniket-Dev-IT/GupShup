# Generated by Django 4.2.7 on 2025-09-19 10:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import posts.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True,
                        help_text="What's on your mind? (supports Hindi and English)",
                        max_length=2000,
                    ),
                ),
                (
                    "privacy",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("friends", "Friends Only"),
                            ("private", "Only Me"),
                        ],
                        default="public",
                        help_text="Who can see this post?",
                        max_length=10,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Add location (e.g., Mumbai, Maharashtra)",
                        max_length=200,
                    ),
                ),
                (
                    "hashtags",
                    models.TextField(
                        blank=True, help_text="Extracted hashtags from post"
                    ),
                ),
                (
                    "likes_count",
                    models.PositiveIntegerField(default=0, help_text="Number of likes"),
                ),
                (
                    "comments_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of comments"
                    ),
                ),
                (
                    "shares_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of shares"
                    ),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(default=0, help_text="Number of views"),
                ),
                (
                    "is_pinned",
                    models.BooleanField(
                        default=False,
                        help_text="Pinned post (appears at top of profile)",
                    ),
                ),
                (
                    "is_edited",
                    models.BooleanField(
                        default=False, help_text="Post has been edited"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        help_text="Post author",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Post",
                "verbose_name_plural": "Posts",
                "db_table": "gupshup_posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PostMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[("image", "Image"), ("video", "Video")],
                        default="image",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Upload image or video",
                        upload_to=posts.models.post_media_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "mp4",
                                    "mov",
                                    "avi",
                                ]
                            )
                        ],
                    ),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, help_text="Media caption", max_length=200
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post",
                    models.ForeignKey(
                        help_text="Associated post",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_files",
                        to="posts.post",
                    ),
                ),
            ],
            options={
                "verbose_name": "Post Media",
                "verbose_name_plural": "Post Media",
                "db_table": "gupshup_post_media",
                "ordering": ["order"],
                "indexes": [
                    models.Index(
                        fields=["post", "order"], name="gupshup_pos_post_id_941486_idx"
                    ),
                    models.Index(
                        fields=["media_type"], name="gupshup_pos_media_t_333509_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["-created_at"], name="gupshup_pos_created_bc5762_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["author", "-created_at"], name="gupshup_pos_author__460a91_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["privacy"], name="gupshup_pos_privacy_b02401_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["location"], name="gupshup_pos_locatio_aab01c_idx"
            ),
        ),
    ]
