# Generated by Django 4.2.7 on 2025-09-20 09:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("posts", "0001_initial"),
        ("admin_panel", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdminSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_key",
                    models.CharField(db_index=True, max_length=40, unique=True),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "Admin Session",
                "verbose_name_plural": "Admin Sessions",
                "db_table": "gupshup_admin_sessions",
            },
        ),
        migrations.CreateModel(
            name="ModeratedContent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("post", "Post"),
                            ("comment", "Comment"),
                            ("user_profile", "User Profile"),
                            ("image", "Image"),
                            ("video", "Video"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content_id", models.CharField(max_length=100)),
                ("content_url", models.URLField(blank=True)),
                ("content_preview", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("flagged", "Flagged for Review"),
                            ("escalated", "Escalated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                (
                    "flag_reason",
                    models.CharField(
                        choices=[
                            ("spam", "Spam"),
                            ("inappropriate", "Inappropriate Content"),
                            ("harassment", "Harassment"),
                            ("fake", "Fake Content"),
                            ("violence", "Violence"),
                            ("hate_speech", "Hate Speech"),
                            ("adult_content", "Adult Content"),
                            ("copyright", "Copyright Violation"),
                            ("misinformation", "Misinformation"),
                            ("other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("report_reason", models.TextField(blank=True)),
                ("auto_flagged", models.BooleanField(default=False)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("moderator_notes", models.TextField(blank=True)),
                ("action_taken", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "Moderated Content",
                "verbose_name_plural": "Moderated Content",
                "db_table": "gupshup_moderated_content",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PlatformAnnouncement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "announcement_type",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("maintenance", "Maintenance"),
                            ("feature", "New Feature"),
                            ("policy", "Policy Update"),
                            ("celebration", "Celebration"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_urgent", models.BooleanField(default=False)),
                ("show_on_login", models.BooleanField(default=False)),
                ("show_on_homepage", models.BooleanField(default=True)),
                (
                    "target_audience",
                    models.CharField(
                        choices=[
                            ("all", "All Users"),
                            ("active", "Active Users Only"),
                            ("verified", "Verified Users"),
                            ("new_users", "New Users (< 30 days)"),
                            ("power_users", "Power Users (> 100 posts)"),
                            ("specific_regions", "Specific Regions"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "target_regions",
                    models.TextField(
                        blank=True,
                        help_text="Comma-separated list of states/cities for regional targeting",
                    ),
                ),
                ("starts_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("ends_at", models.DateTimeField(blank=True, null=True)),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("clicks_count", models.PositiveIntegerField(default=0)),
                ("action_text", models.CharField(blank=True, max_length=50)),
                ("action_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Platform Announcement",
                "verbose_name_plural": "Platform Announcements",
                "db_table": "gupshup_platform_announcements",
                "ordering": ["-created_at"],
            },
        ),
        migrations.RenameField(
            model_name="banneduser",
            old_name="appeal_approved",
            new_name="user_notified",
        ),
        migrations.RemoveField(
            model_name="banneduser",
            name="appeal_reviewed",
        ),
        migrations.RemoveField(
            model_name="banneduser",
            name="appeal_submitted",
        ),
        migrations.AddField(
            model_name="adminaction",
            name="request_method",
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name="adminaction",
            name="request_path",
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="adminaction",
            name="severity",
            field=models.CharField(
                choices=[
                    ("info", "Info"),
                    ("warning", "Warning"),
                    ("error", "Error"),
                    ("critical", "Critical"),
                ],
                default="info",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="adminaction",
            name="status",
            field=models.CharField(
                choices=[("success", "Success"), ("failed", "Failed")],
                default="success",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="adminaction",
            name="target_admin",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="admin_actions_received",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminaction",
            name="title",
            field=models.CharField(default="Admin Action", max_length=200),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="allowed_ip_addresses",
            field=models.TextField(
                blank=True,
                help_text="Comma-separated IP addresses. Leave empty for no restriction.",
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="can_access_reports",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="can_export_data",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="can_manage_admins",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="can_manage_system",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="can_moderate_content",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_admins",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="failed_login_attempts",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="last_failed_login",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="last_login_ip",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="password_changed_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="phone_number",
            field=phonenumber_field.modelfields.PhoneNumberField(
                blank=True,
                help_text="Admin contact number",
                max_length=128,
                null=True,
                region="IN",
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="require_2fa",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="session_timeout_minutes",
            field=models.PositiveIntegerField(
                default=480, help_text="Session timeout in minutes"
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="appeal_response",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="appeal_reviewed_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="appeal_reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_appeals",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="appeal_status",
            field=models.CharField(
                choices=[
                    ("none", "No Appeal"),
                    ("submitted", "Appeal Submitted"),
                    ("under_review", "Under Review"),
                    ("approved", "Appeal Approved"),
                    ("rejected", "Appeal Rejected"),
                ],
                default="none",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="escalated_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="escalated_to_admin",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="escalated_bans",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="notification_sent_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="public_reason",
            field=models.CharField(
                blank=True, help_text="Reason shown to the user", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="related_post",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="bans",
                to="posts.post",
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="related_warning",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="resulting_bans",
                to="admin_panel.userwarning",
            ),
        ),
        migrations.AddField(
            model_name="banneduser",
            name="user_agent",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="auto_action",
            field=models.CharField(
                blank=True,
                help_text="Automatic action taken (ban, restriction, etc.)",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="email_sent",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="email_sent_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="expires_at",
            field=models.DateTimeField(
                blank=True, help_text="Warning expiry date", null=True
            ),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="parent_warning",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="escalations",
                to="admin_panel.userwarning",
            ),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="user_response",
            field=models.TextField(blank=True, help_text="User's response to warning"),
        ),
        migrations.AddField(
            model_name="userwarning",
            name="user_response_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="adminaction",
            name="action_type",
            field=models.CharField(
                choices=[
                    ("user_created", "User Created"),
                    ("user_updated", "User Updated"),
                    ("user_deleted", "User Deleted"),
                    ("user_banned", "User Banned"),
                    ("user_unbanned", "User Unbanned"),
                    ("user_suspended", "User Suspended"),
                    ("user_activated", "User Activated"),
                    ("user_verified", "User Verified"),
                    ("post_deleted", "Post Deleted"),
                    ("post_flagged", "Post Flagged"),
                    ("post_approved", "Post Approved"),
                    ("post_hidden", "Post Hidden"),
                    ("comment_deleted", "Comment Deleted"),
                    ("warning_issued", "Warning Issued"),
                    ("warning_resolved", "Warning Resolved"),
                    ("warning_escalated", "Warning Escalated"),
                    ("login", "Admin Login"),
                    ("logout", "Admin Logout"),
                    ("password_changed", "Password Changed"),
                    ("settings_changed", "Settings Changed"),
                    ("bulk_action", "Bulk Action Performed"),
                    ("data_export", "Data Export"),
                    ("announcement_sent", "Announcement Sent"),
                    ("admin_created", "Admin Created"),
                    ("admin_updated", "Admin Updated"),
                    ("admin_permissions_changed", "Admin Permissions Changed"),
                    ("failed_login", "Failed Login Attempt"),
                    ("account_locked", "Account Locked"),
                    ("suspicious_activity", "Suspicious Activity"),
                ],
                max_length=30,
            ),
        ),
        migrations.AlterField(
            model_name="adminaction",
            name="description",
            field=models.TextField(default="Admin action performed"),
        ),
        migrations.AlterField(
            model_name="adminaction",
            name="target_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="admin_actions_received",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="email",
            field=models.EmailField(db_index=True, max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="first_name",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="last_name",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="password",
            field=models.CharField(max_length=128, verbose_name="password"),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="role",
            field=models.CharField(
                choices=[
                    ("super_admin", "Super Administrator"),
                    ("admin", "Administrator"),
                    ("moderator", "Moderator"),
                    ("analyst", "Analytics Viewer"),
                ],
                default="admin",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="status",
            field=models.CharField(
                choices=[
                    ("active", "Active"),
                    ("inactive", "Inactive"),
                    ("suspended", "Suspended"),
                    ("locked", "Locked"),
                ],
                default="active",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="adminuser",
            name="username",
            field=models.CharField(db_index=True, max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name="banneduser",
            name="ban_type",
            field=models.CharField(
                choices=[
                    ("temporary", "Temporary Ban"),
                    ("permanent", "Permanent Ban"),
                    ("shadow", "Shadow Ban"),
                    ("content_only", "Content Ban Only"),
                    ("interaction_ban", "Interaction Ban"),
                ],
                default="temporary",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="userwarning",
            name="related_post",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="warnings",
                to="posts.post",
            ),
        ),
        migrations.AlterField(
            model_name="userwarning",
            name="severity",
            field=models.CharField(
                choices=[
                    ("info", "Info"),
                    ("low", "Low"),
                    ("medium", "Medium"),
                    ("high", "High"),
                    ("critical", "Critical"),
                ],
                default="medium",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="userwarning",
            name="status",
            field=models.CharField(
                choices=[
                    ("active", "Active"),
                    ("acknowledged", "Acknowledged"),
                    ("resolved", "Resolved"),
                    ("escalated", "Escalated"),
                    ("expired", "Expired"),
                ],
                default="active",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="userwarning",
            name="warning_type",
            field=models.CharField(
                choices=[
                    ("inappropriate_content", "Inappropriate Content"),
                    ("spam", "Spam"),
                    ("harassment", "Harassment"),
                    ("fake_profile", "Fake Profile"),
                    ("copyright_violation", "Copyright Violation"),
                    ("terms_violation", "Terms Violation"),
                    ("hate_speech", "Hate Speech"),
                    ("misinformation", "Misinformation"),
                    ("adult_content", "Adult Content"),
                    ("violence", "Violence"),
                    ("other", "Other"),
                ],
                max_length=30,
            ),
        ),
        migrations.AddIndex(
            model_name="adminaction",
            index=models.Index(
                fields=["admin", "created_at"], name="gupshup_adm_admin_i_4a04ca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminaction",
            index=models.Index(
                fields=["action_type", "created_at"],
                name="gupshup_adm_action__f37a44_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="adminaction",
            index=models.Index(
                fields=["severity", "created_at"], name="gupshup_adm_severit_580f5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminaction",
            index=models.Index(
                fields=["target_user", "created_at"],
                name="gupshup_adm_target__b1de0c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(
                fields=["username"], name="gupshup_adm_usernam_a88b48_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(fields=["email"], name="gupshup_adm_email_de0e48_idx"),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(fields=["status"], name="gupshup_adm_status_5cfe71_idx"),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(fields=["role"], name="gupshup_adm_role_4a98ce_idx"),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(
                fields=["last_login"], name="gupshup_adm_last_lo_b0d5b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="banneduser",
            index=models.Index(
                fields=["user", "is_active"], name="gupshup_ban_user_id_deed32_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="banneduser",
            index=models.Index(
                fields=["ban_type", "banned_at"], name="gupshup_ban_ban_typ_6b4ca4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="banneduser",
            index=models.Index(
                fields=["appeal_status"], name="gupshup_ban_appeal__3f3da0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="banneduser",
            index=models.Index(
                fields=["expires_at"], name="gupshup_ban_expires_358e59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userwarning",
            index=models.Index(
                fields=["user", "status"], name="gupshup_use_user_id_703009_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userwarning",
            index=models.Index(
                fields=["severity", "created_at"], name="gupshup_use_severit_deb099_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userwarning",
            index=models.Index(
                fields=["admin", "created_at"], name="gupshup_use_admin_i_5efea4_idx"
            ),
        ),
        migrations.AlterModelTable(
            name="adminaction",
            table="gupshup_admin_actions",
        ),
        migrations.AlterModelTable(
            name="adminuser",
            table="gupshup_admin_users",
        ),
        migrations.AlterModelTable(
            name="banneduser",
            table="gupshup_banned_users",
        ),
        migrations.AlterModelTable(
            name="userwarning",
            table="gupshup_user_warnings",
        ),
        migrations.AddField(
            model_name="platformannouncement",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="announcements",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="moderatedcontent",
            name="post",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="moderation_records",
                to="posts.post",
            ),
        ),
        migrations.AddField(
            model_name="moderatedcontent",
            name="reported_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reported_content",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="moderatedcontent",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_content",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="moderatedcontent",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="moderated_content",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="adminsession",
            name="admin",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sessions",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddIndex(
            model_name="platformannouncement",
            index=models.Index(
                fields=["is_active", "starts_at"], name="gupshup_pla_is_acti_44f134_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="platformannouncement",
            index=models.Index(
                fields=["target_audience"], name="gupshup_pla_target__d9e287_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="platformannouncement",
            index=models.Index(
                fields=["announcement_type"], name="gupshup_pla_announc_fb0aaf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moderatedcontent",
            index=models.Index(
                fields=["status", "priority"], name="gupshup_mod_status_84c51b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moderatedcontent",
            index=models.Index(
                fields=["content_type", "status"], name="gupshup_mod_content_dcd792_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moderatedcontent",
            index=models.Index(
                fields=["user", "created_at"], name="gupshup_mod_user_id_c7723e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moderatedcontent",
            index=models.Index(
                fields=["reviewed_by", "reviewed_at"],
                name="gupshup_mod_reviewe_8f871f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["session_key"], name="gupshup_adm_session_727439_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["admin", "is_active"], name="gupshup_adm_admin_i_efce54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["expires_at"], name="gupshup_adm_expires_938622_idx"
            ),
        ),
    ]
