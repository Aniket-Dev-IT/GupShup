# Generated by Django 4.2.7 on 2025-09-19 10:54

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="GupShupUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="Indian phone number (+91)",
                        max_length=128,
                        null=True,
                        region="IN",
                        unique=True,
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="Tell us about yourself", max_length=500
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="Your city (e.g., Mumbai, Delhi, Bangalore)",
                        max_length=100,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AN", "Andaman and Nicobar Islands"),
                            ("AP", "Andhra Pradesh"),
                            ("AR", "Arunachal Pradesh"),
                            ("AS", "Assam"),
                            ("BR", "Bihar"),
                            ("CH", "Chandigarh"),
                            ("CG", "Chhattisgarh"),
                            ("DN", "Dadra and Nagar Haveli"),
                            ("DD", "Daman and Diu"),
                            ("DL", "Delhi"),
                            ("GA", "Goa"),
                            ("GJ", "Gujarat"),
                            ("HR", "Haryana"),
                            ("HP", "Himachal Pradesh"),
                            ("JK", "Jammu and Kashmir"),
                            ("JH", "Jharkhand"),
                            ("KA", "Karnataka"),
                            ("KL", "Kerala"),
                            ("LD", "Lakshadweep"),
                            ("MP", "Madhya Pradesh"),
                            ("MH", "Maharashtra"),
                            ("MN", "Manipur"),
                            ("ML", "Meghalaya"),
                            ("MZ", "Mizoram"),
                            ("NL", "Nagaland"),
                            ("OD", "Odisha"),
                            ("PY", "Puducherry"),
                            ("PB", "Punjab"),
                            ("RJ", "Rajasthan"),
                            ("SK", "Sikkim"),
                            ("TN", "Tamil Nadu"),
                            ("TS", "Telangana"),
                            ("TR", "Tripura"),
                            ("UP", "Uttar Pradesh"),
                            ("UK", "Uttarakhand"),
                            ("WB", "West Bengal"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[("en", "English"), ("hi", "हिन्दी")],
                        default="en",
                        help_text="Your preferred language for GupShup",
                        max_length=5,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Profile picture",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="Verified account badge"
                    ),
                ),
                (
                    "followers_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of followers"
                    ),
                ),
                (
                    "following_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of people user is following"
                    ),
                ),
                (
                    "posts_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of posts by user"
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(
                        default=False,
                        help_text="Private account - requires approval for follow",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="Your date of birth", null=True
                    ),
                ),
                (
                    "last_seen",
                    models.DateTimeField(
                        auto_now=True, help_text="Last activity timestamp"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "GupShup User",
                "verbose_name_plural": "GupShup Users",
                "db_table": "gupshup_users",
                "indexes": [
                    models.Index(
                        fields=["phone_number"], name="gupshup_use_phone_n_796700_idx"
                    ),
                    models.Index(
                        fields=["city", "state"], name="gupshup_use_city_3aa8f4_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="gupshup_use_created_979253_idx"
                    ),
                    models.Index(
                        fields=["last_seen"], name="gupshup_use_last_se_c11407_idx"
                    ),
                ],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
